=============== CAKE PAGE CREATION ===============\
cake bake all <tablename>
=============== CAKE PAGE CREATION ===============

=============== CAKE MODAL CREATION ===============
cake bake modal <tablename>
=============== CAKE MODAL CREATION ===============

CREATE TABLE `users_acl` (
  `id` int NOT NULL AUTO_INCREMENT,
  `permission` int NOT NULL,
  `users` int NOT NULL,
  `controller` varchar(250) NOT NULL,
  `action` varchar(250) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `fk_permissions_idx` (`permission`),
  KEY `fk_users_idx` (`users`),
  CONSTRAINT `fk_permissions` FOREIGN KEY (`permission`) REFERENCES `users_permissions` (`id`) ON DELETE CASCADE,
  CONSTRAINT `fk_users` FOREIGN KEY (`users`) REFERENCES `users` (`id`) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

CREATE TABLE `users_permissions` (
  `id` int NOT NULL AUTO_INCREMENT,
  `permissionsName` varchar(250) NOT NULL,
  `permissionsLevel` varchar(45) NOT NULL DEFAULT '0',
  PRIMARY KEY (`id`),
  UNIQUE KEY `permissionsName_UNIQUE` (`permissionsName`),
  UNIQUE KEY `permissionsLevel_UNIQUE` (`permissionsLevel`)
) ENGINE=InnoDB AUTO_INCREMENT=8 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

INSERT INTO `users_permissions` (`id`, `permissionsName`, `permissionsLevel`) VALUES ('1', 'View', '1');
INSERT INTO `users_permissions` (`id`, `permissionsName`, `permissionsLevel`) VALUES ('2', 'Create', '2');
INSERT INTO `users_permissions` (`id`, `permissionsName`, `permissionsLevel`) VALUES ('3', 'View_Create', '3');
INSERT INTO `users_permissions` (`id`, `permissionsName`, `permissionsLevel`) VALUES ('4', 'Update', '4');
INSERT INTO `users_permissions` (`id`, `permissionsName`, `permissionsLevel`) VALUES ('5', 'View_Update', '5');
INSERT INTO `users_permissions` (`id`, `permissionsName`, `permissionsLevel`) VALUES ('6', 'Create_Update', '6');
INSERT INTO `users_permissions` (`id`, `permissionsName`, `permissionsLevel`) VALUES ('7', 'View_Create_Update', '7');

========= Notification Trigger for create schedule =========
CREATE DEFINER=`root`@`localhost` TRIGGER `po_item_schedules_AFTER_INSERT` AFTER INSERT ON `po_item_schedules` FOR EACH ROW BEGIN
    DECLARE v_user_id INT;
    
    -- Retrieve the buyer_id from the vendor_temp table based on sap_vendor_code

     SELECT u.id INTO v_user_id FROM users u
LEFT JOIN vendor_temps v ON u.username = v.email 
LEFT JOIN po_headers p ON p.sap_vendor_code = v.sap_vendor_code
WHERE p.id = NEW.po_header_id
LIMIT 1;
    
    IF v_user_id IS NOT NULL THEN
        -- Check if a record exists in notifications table for the given user_id and notification_type
        IF EXISTS (SELECT 1 FROM notifications WHERE user_id = v_user_id AND notification_type = 'create_schedule') THEN
            -- Update the existing record with the incremented message_count
            UPDATE notifications
            SET message_count = message_count + 1
            WHERE user_id = v_user_id AND notification_type = 'create_schedule';
        ELSE
            -- Insert a new record with message_count = 1
            INSERT INTO notifications (message_count, user_id, notification_type, created_at)
            VALUES (1, v_user_id, 'create_schedule', NOW());
        END IF;
    END IF;
END


// ========== Notification trigger for create asn ========================

CREATE DEFINER=`root`@`localhost` TRIGGER `asn_headers_AFTER_IN` AFTER INSERT ON `asn_headers` FOR EACH ROW BEGIN
    DECLARE v_buyer_id INT;
    
    -- Retrieve the buyer_id from the vendor_temp table based on sap_vendor_code
    SELECT buyer_id INTO v_buyer_id FROM vendor_temps a
    LEFT JOIN po_headers b ON a.sap_vendor_code = b.sap_vendor_code
    WHERE b.id = NEW.po_header_id
    LIMIT 1;
    
    IF v_buyer_id IS NOT NULL THEN
        -- Check if a record exists in notifications table for the given user_id and notification_type
        IF EXISTS (SELECT 1 FROM notifications WHERE user_id = v_buyer_id AND notification_type = 'asn_material') THEN
            -- Update the existing record with the incremented message_count
            UPDATE notifications
            SET message_count = message_count + 1
            WHERE user_id = v_buyer_id AND notification_type = 'asn_material';
        ELSE
            -- Insert a new record with message_count = 1
            INSERT INTO notifications (message_count, user_id, notification_type, created_at)
            VALUES (1, v_buyer_id, 'asn_material', NOW());
        END IF;
    END IF;
END


// ==================== Vendor Status ====================
author: JThayil
date: 22.06.2023
// ==================== ============= ====================
CREATE TABLE `vendor_status` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `status` INT NOT NULL,
  `description` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `status_UNIQUE` (`status` ASC) VISIBLE);

INSERT INTO `vendor_status` (`status`, `description`) VALUES ('0', 'Sent to Vendor');
INSERT INTO `vendor_status` (`status`, `description`) VALUES ('1', 'Pending for approval');
INSERT INTO `vendor_status` (`status`, `description`) VALUES ('2', 'Sent to SAP');
INSERT INTO `vendor_status` (`status`, `description`) VALUES ('3', 'Approved');
INSERT INTO `vendor_status` (`status`, `description`) VALUES ('4', 'Rejected');
INSERT INTO `vendor_status` (`status`, `description`) VALUES ('5', 'SAP Import');
// ==================== Vendor Status ====================


// ==================== ASN Header ====================
author: JThayil
date: 28.06.2023
// ==================== ============= ====================
ALTER TABLE `asn_headers` ADD COLUMN `gateout_date` DATETIME NULL DEFAULT NULL;
// ==================== ASN Header ====================


// ==================== ASN Header ====================
author: JThayil
date: 29.06.2023
// ==================== ============= ====================
ALTER TABLE `vendor_temps` ADD COLUMN `update_flag` INT NULL DEFAULT '0' ;
// ==================== ASN Header ====================


// ==================== Vendor Update ====================
author: JThayil
date: 29.06.2023
// ==================== ============= ====================
ALTER TABLE `vendor_temps` DROP INDEX `email_UNIQUE` ;
// ==================== Vendor Update ====================


// ==================== Po acknowledge ====================
CREATE DEFINER=`root`@`localhost` TRIGGER `po_headers_Before_UPDATE` BEFORE UPDATE ON `po_headers` FOR EACH ROW BEGIN
    DECLARE acknowledge INT;
	DECLARE v_user_id INT;
    DECLARE u_buyer_id INT;

    
    -- Retrieve user_id and buyer_id based on the updated header_id
    SELECT u.id,vt.buyer_id,ph.acknowledge INTO v_user_id, u_buyer_id,acknowledge
FROM vendor_temps vt
LEFT JOIN po_headers ph ON vt.sap_vendor_code = ph.sap_vendor_code
LEFT JOIN users u ON vt.email = u.username
WHERE ph.id = NEW.id
LIMIT 1;

    IF acknowledge != NEW.acknowledge THEN
        IF EXISTS (SELECT 1 FROM notifications WHERE user_id = v_user_id  AND notification_type = 'po_acknowledge') THEN
            UPDATE notifications
            SET message_count = message_count + 1
            WHERE  user_id = v_user_id AND notification_type = 'po_acknowledge';
        ELSE
            -- Insert a new record for v_user_id with message_count = 1
            INSERT INTO notifications (message_count, user_id, notification_type, created_at)
            VALUES (1, v_user_id, 'po_acknowledge', NOW());
        END IF;

         IF EXISTS (SELECT 1 FROM notifications WHERE user_id = u_buyer_id  AND notification_type = 'po_acknowledge') THEN
            -- Update the existing records for v_user_id with the incremented message_count
            UPDATE notifications
            SET message_count = message_count + 1
            WHERE  user_id = u_buyer_id AND notification_type = 'po_acknowledge';
        ELSE
            -- Insert a new record for v_user_id with message_count = 1
            INSERT INTO notifications (message_count, user_id, notification_type, created_at)
            VALUES (1, u_buyer_id, 'po_acknowledge', NOW());

        END IF;
        
    END IF; 
END

// ==================== Po acknowledge ====================


// ==================== Po header acknowledge====================

ALTER TABLE `po_headers` 
ADD COLUMN `acknowledge` INT NULL DEFAULT '0' AFTER `acknowledge`;
// ==================== Po header acknowledge====================


// ==================== Vendor Update ====================
author: JThayil
date: 04.07.2023
// ==================== ============= ====================

CREATE TABLE `dailymonitor` (
  `id` int NOT NULL AUTO_INCREMENT,
  `vendor_id` int DEFAULT NULL,
  `productionline_id` int DEFAULT NULL,
  `material_id` int DEFAULT NULL,
  `plan_date` date DEFAULT NULL,
  `target_production` int DEFAULT NULL,
  `confirm_production` int DEFAULT NULL,
  `status` int DEFAULT NULL,
  `added_date` datetime DEFAULT CURRENT_TIMESTAMP,
  `updated_date` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  UNIQUE KEY `index2` (`productionline_id`,`material_id`,`plan_date`)
) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;


CREATE TABLE `productionline` (
  `id` int NOT NULL AUTO_INCREMENT,
  `vendor_id` int NOT NULL,
  `vendormaterial_id` int NOT NULL,
  `prdline_description` varchar(250) NOT NULL,
  `prdline_capacity` int NOT NULL,
  `status` int DEFAULT NULL,
  `added_date` datetime DEFAULT CURRENT_TIMESTAMP,
  `updated_date` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

CREATE TABLE `vendor_material` (
  `id` int NOT NULL AUTO_INCREMENT,
  `vendor_id` int NOT NULL,
  `vendor_material_code` bigint NOT NULL,
  `description` varchar(200) NOT NULL,
  `buyer_material_code` bigint DEFAULT NULL,
  `minimum_stock` int DEFAULT NULL,
  `uom` varchar(50) DEFAULT NULL,
  `status` tinyint(1) DEFAULT '0',
  `added_date` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_date` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

CREATE TABLE `stockupload` (
  `id` int NOT NULL AUTO_INCREMENT,
  `opening_stock` int NOT NULL,
  `vendor_material_id` int NOT NULL,
  `vendor_id` int NOT NULL,
  `added_date` datetime DEFAULT CURRENT_TIMESTAMP,
  `updated_date` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

// ==================== ASN Header ====================


// ==================== Chat ====================
author: JThayil
date: 04.07.2023
// ==================== ============= ====================
CREATE TABLE `msgchat_footers` (
 `id` int NOT NULL AUTO_INCREMENT,
 `msgchat_header_id` varchar(250) NOT NULL,
 `group_id` int NOT NULL,
 `sender_id` int NOT NULL,
 `message` text NOT NULL,
 `seen` int NOT NULL DEFAULT '0',
 `addeddate` datetime DEFAULT CURRENT_TIMESTAMP,
 `updateddate` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
 PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci

CREATE TABLE `msgchat_headers` (
 `id` int NOT NULL AUTO_INCREMENT,
 `table_name` varchar(250) NOT NULL,
 `table_pk` int NOT NULL,
 `subject` text NOT NULL,
 `addeddate` datetime DEFAULT CURRENT_TIMESTAMP,
 `updateddate` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
 PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci

// ==================== Chat ====================

ALTER TABLE `vendor_material` CHANGE COLUMN `uom` `uom` INT NULL DEFAULT NULL ;

// ==================== Line Master ====================
author: JThayil
date: 17.07.2023
// ==================== ============= ====================
CREATE TABLE `line_masters` (
  `id` int NOT NULL AUTO_INCREMENT,
  `sap_vendor_code` varchar(10) NOT NULL,
  `name` int NOT NULL,
  `capacity` decimal(12,2) NOT NULL,
  `uom` varchar(3) NOT NULL,
  `status` tinyint NOT NULL DEFAULT '0',
  `added_date` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_date` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`)
);
// ==================== ============= ====================

// ==================== factories =======================
// ==================== ============= ====================
CREATE TABLE `factories` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `vendor_temps_id` int DEFAULT NULL,
  `sap_vendor_code` varchar(10) DEFAULT NULL,
  `factory_code` varchar(45) NOT NULL,
  `address` VARCHAR(255) NULL,
  `address_2` VARCHAR(100) NULL,
  `pincode` VARCHAR(6) NULL,
  `city` VARCHAR(50) NULL,
  `state` VARCHAR(100) NULL,
  `country` VARCHAR(50) NULL,
  `added_date` DATETIME NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_date` DATETIME NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`));

ALTER TABLE `line_masters` ADD COLUMN `factory_id` INT NULL AFTER `id`;
// ==================== ============= ====================



// ====================  stock_uploads =======================
// ==================== ============= ===============
DROP TABLE IF EXISTS `stock_uploads`;
CREATE TABLE IF NOT EXISTS `stock_uploads` (
  `id` int NOT NULL AUTO_INCREMENT,
  `opening_stock` decimal(12,2) NOT NULL,
  `current_stock` decimal(12,2) NOT NULL,
  `asn_stock` decimal(12,2) NOT NULL,
  `material_id` int NOT NULL,
  `factories_id` int NULL,
  `sap_vendor_code` varchar(10) NOT NULL,
  `added_date` datetime DEFAULT CURRENT_TIMESTAMP,
  `updated_date` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  UNIQUE KEY `material_id` (`material_id`,`sap_vendor_code`)
);

// ==================== Line Master ====================
author: JThayil
date: 05.08.2023
// ==================== ============= ====================
ALTER TABLE `payment_terms` CHANGE COLUMN `description` `description` VARCHAR(250) NULL DEFAULT NULL ;

ALTER TABLE `schema_groups` ADD COLUMN `code` VARCHAR(15) NULL AFTER `id`;

INSERT INTO `schema_groups` (`id`, `name`, `status`, `added_date`, `updated_date`) VALUES ('1', 'Standard schema vendor', '1', '2023-01-02 13:13:22', '2023-08-04 17:38:02');
INSERT INTO `schema_groups` (`id`, `code`, `name`, `status`, `added_date`, `updated_date`) VALUES ('2', '01', '01 - Schema vendor 01', '1', '2023-01-02 13:13:22', '2023-08-04 17:38:05');
INSERT INTO `schema_groups` (`id`, `code`, `name`, `status`, `added_date`, `updated_date`) VALUES ('3', '02', '02 - Schema vendor 02', '1', '2023-08-04 17:38:51', '2023-08-04 17:38:51');
INSERT INTO `schema_groups` (`id`, `code`, `name`, `status`, `added_date`, `updated_date`) VALUES ('4', '03', '03 - Schema for Import Vendor', '1', '2023-08-04 17:38:53', '2023-08-04 17:38:53');

ALTER TABLE `account_groups` ADD COLUMN `code` VARCHAR(15) NULL AFTER `id`;
ALTER TABLE `account_groups` CHANGE COLUMN `updated_date` `updated_date` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP ;


ALTER TABLE `purchasing_organizations` ADD COLUMN `code` VARCHAR(15) NULL AFTER `id`,
CHANGE COLUMN `updated_date` `updated_date` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP ;


// ==================== country Currency =======================
// ==================== ============= ===============

CREATE TABLE `company_codes` (
`id` INT NOT NULL AUTO_INCREMENT,
`code` VARCHAR(45) NOT NULL,
`name` VARCHAR(250) NOT NULL,
`status` TINYINT NOT NULL,
`added_date` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
`updated_date` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
PRIMARY KEY (`id`));


ALTER TABLE `purchasing_organizations` ADD COLUMN `company_code_id` INT NULL;

ALTER TABLE `account_groups` ADD COLUMN `company_code_id` INT NULL;

ALTER TABLE `payment_terms` ADD COLUMN `company_code_id` INT NULL;

ALTER TABLE `schema_groups` ADD COLUMN `company_code_id` INT NULL;

CREATE TABLE `reconciliation_accounts` (
  `id` int NOT NULL AUTO_INCREMENT,
  `company_code_id` int DEFAULT NULL,
  `code` varchar(45) NOT NULL,
  `name` varchar(250) NOT NULL,
  `status` tinyint NOT NULL,
  `added_date` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_date` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`)
);


CREATE TABLE `vendor_bank details` (
  `id` int NOT NULL AUTO_INCREMENT,
  `vendor_temp_id` int NOT NULL,
  `bank_name` varchar(45) DEFAULT NULL,
  `bank_key` varchar(45) DEFAULT NULL,
  `bank_number` varchar(45) DEFAULT NULL,
  `bank_branch` varchar(45) DEFAULT NULL,
  `branch_country` varchar(45) DEFAULT NULL,
  `branch_city` varchar(45) DEFAULT NULL,
  `swift/bic` varchar(45) DEFAULT NULL,
  `tan` varchar(45) DEFAULT NULL,
  `cin` varchar(45) DEFAULT NULL,
  `order_currrency` varchar(10) DEFAULT NULL,
  `gst_no` varchar(25) DEFAULT NULL,
  `pan_no` varchar(25) DEFAULT NULL,
  `cheque_cancelled` varchar(250) DEFAULT NULL,
  `added_date` datetime DEFAULT CURRENT_TIMESTAMP,
  `updated_date` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`)
);

CREATE TABLE `vendor_branch_offices` (
  `id` int NOT NULL AUTO_INCREMENT,
  `vendor_temp_id` int DEFAULT NULL,
  `address` varchar(45) DEFAULT NULL,
  `address_2` varchar(45) DEFAULT NULL,
  `pincode` varchar(45) DEFAULT NULL,
  `city` varchar(45) DEFAULT NULL,
  `country` varchar(45) DEFAULT NULL,
  `state` varchar(45) DEFAULT NULL,
  `telephone` varchar(45) DEFAULT NULL,
  `registration_year` varchar(4) DEFAULT NULL,
  `registration_no` varchar(15) DEFAULT NULL,
  `registration_certificate` varchar(250) DEFAULT NULL,
  `added_date` datetime DEFAULT CURRENT_TIMESTAMP,
  `updated_date` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`)
);

CREATE TABLE `vendor_certificates` (
  `id` int NOT NULL AUTO_INCREMENT,
  `vendor_temp_id` int NOT NULL,
  `six_sigma` varchar(45) DEFAULT NULL,
  `six_sigma_certificate` varchar(250) DEFAULT NULL,
  `registration` varchar(45) DEFAULT NULL,
  `iso_registration` varchar(45) DEFAULT NULL,
  `certificate_file` varchar(45) DEFAULT NULL,
  `declaration_file` varchar(45) DEFAULT NULL,
  `independent_mfg` varchar(45) DEFAULT NULL,
  `v_suppliers` varchar(45) DEFAULT NULL,
  `added_date` datetime DEFAULT CURRENT_TIMESTAMP,
  `updated_date` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`)
);

CREATE TABLE `vendor_commencements` (
  `id` int NOT NULL AUTO_INCREMENT,
  `vendor_factory_id` int NOT NULL,
  `vendor_temp_id` int NOT NULL,
  `commencement_year` varchar(45) DEFAULT NULL,
  `commencement_material` varchar(45) DEFAULT NULL,
  `first_year` varchar(45) DEFAULT NULL,
  `first_year_qty` varchar(45) DEFAULT NULL,
  `second_year` varchar(45) DEFAULT NULL,
  `second_year_qty` varchar(45) DEFAULT NULL,
  `third_year` varchar(45) DEFAULT NULL,
  `third_year_qty` varchar(45) DEFAULT NULL,
  `added_date` datetime DEFAULT CURRENT_TIMESTAMP,
  `updated_date` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`)
);

CREATE TABLE `vendor_facilities` (
  `id` int NOT NULL AUTO_INCREMENT,
  `vendor_temp_id` varchar(45) DEFAULT NULL,
  `lab_facility` varchar(45) DEFAULT NULL,
  `lab_facility_file` varchar(250) DEFAULT NULL,
  `isi_registration` varchar(45) DEFAULT NULL,
  `isi_registration_file` varchar(250) DEFAULT NULL,
  `test_facility` varchar(45) DEFAULT NULL,
  `test_facility_file` varchar(250) DEFAULT NULL,
  `sales_services` varchar(45) DEFAULT NULL,
  `sales_services_file` varchar(250) DEFAULT NULL,
  `quality_control` varchar(45) DEFAULT NULL,
  `quality_control_file` varchar(250) DEFAULT NULL,
  `added_date` datetime DEFAULT CURRENT_TIMESTAMP,
  `updated_date` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`)
);

CREATE TABLE `vendor_factories` (
  `id` int NOT NULL AUTO_INCREMENT,
  `vendor_temps_id` int DEFAULT NULL,
  `factory_code` varchar(45) NOT NULL,
  `address` varchar(255) DEFAULT NULL,
  `address_2` varchar(100) DEFAULT NULL,
  `pincode` varchar(6) DEFAULT NULL,
  `city` varchar(50) DEFAULT NULL,
  `state` varchar(100) DEFAULT NULL,
  `country` varchar(50) DEFAULT NULL,
  `installed_capacity` varchar(45) DEFAULT NULL,
  `installed_capacity_file` varchar(250) DEFAULT NULL,
  `machinery_available` varchar(45) DEFAULT NULL,
  `machinery_available_file` varchar(250) DEFAULT NULL,
  `power_available` varchar(45) DEFAULT NULL,
  `power_available_file` varchar(250) DEFAULT NULL,
  `raw_material` varchar(45) DEFAULT NULL,
  `raw_material_file` varchar(250) DEFAULT NULL,
  `added_date` datetime DEFAULT CURRENT_TIMESTAMP,
  `updated_date` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`)
);

CREATE TABLE `vendor_incometaxes` (
  `id` int NOT NULL AUTO_INCREMENT,
  `vendor_temp_id` int NOT NULL,
  `certificate_no` varchar(45) DEFAULT NULL,
  `certificate_date` date DEFAULT NULL,
  `certificate_file` varchar(250) DEFAULT NULL,
  `balance_sheet_file` varchar(250) DEFAULT NULL,
  `added_date` datetime DEFAULT CURRENT_TIMESTAMP,
  `updated_date` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`)
);

CREATE TABLE `vendor_material_stocks` (
  `id` int NOT NULL AUTO_INCREMENT,
  `sap_vendor_code` varchar(10) NOT NULL,
  `material` varchar(18) DEFAULT NULL,
  `part_code` varchar(20) NOT NULL,
  `material_desc` varchar(40) DEFAULT NULL,
  `current_stock` decimal(15,2) NOT NULL,
  `production_stock` decimal(15,2) NOT NULL,
  `status` tinyint(1) NOT NULL DEFAULT '1',
  `added_date` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_date` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`)
);

CREATE TABLE `vendor_otherdetails` (
  `id` int NOT NULL AUTO_INCREMENT,
  `vendor_temp_id` int NOT NULL,
  `six_sigma` varchar(250) NOT NULL,
  `six_sigma_file` tinyint(1) NOT NULL,
  `iso` varchar(250) NOT NULL,
  `iso_file` varchar(250) DEFAULT NULL,
  `halal_file` varchar(250) DEFAULT NULL,
  `declaration_file` varchar(250) DEFAULT NULL,
  `fully_manufactured` varchar(250) DEFAULT NULL,
  `suppliers_name` varchar(250) DEFAULT NULL,
  `added_date` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_date` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`)
);

CREATE TABLE `vendor_partner_address` (
  `id` int NOT NULL AUTO_INCREMENT,
  `vendor_temp_id` int NOT NULL,
  `type` varchar(45) DEFAULT NULL,
  `name` varchar(45) DEFAULT NULL,
  `address` varchar(250) DEFAULT NULL,
  `address_2` varchar(250) DEFAULT NULL,
  `pincode` varchar(250) DEFAULT NULL,
  `city` varchar(250) DEFAULT NULL,
  `country` varchar(250) DEFAULT NULL,
  `state` varchar(250) DEFAULT NULL,
  `telephone` varchar(50) DEFAULT NULL,
  `fax_no` varchar(50) DEFAULT NULL,
  `added_date` datetime DEFAULT CURRENT_TIMESTAMP,
  `updated_date` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`)
);

CREATE TABLE `vendor_production_histories` (
  `id` int NOT NULL AUTO_INCREMENT,
  `vendor_temp_id` int NOT NULL,
  `year_of_commercement` varchar(45) DEFAULT NULL,
  `material` date DEFAULT NULL,
  `first_year` varchar(250) DEFAULT NULL,
  `first_yearproduction` varchar(250) DEFAULT NULL,
  `second_year` varchar(250) DEFAULT NULL,
  `second_yearproduction` varchar(250) DEFAULT NULL,
  `third_year` varchar(250) DEFAULT NULL,
  `third_yearproduction` varchar(250) DEFAULT NULL,
  `added_date` datetime DEFAULT CURRENT_TIMESTAMP,
  `updated_date` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`)
);

CREATE TABLE `vendor_questionnaires` (
  `id` int NOT NULL AUTO_INCREMENT,
  `vendor_temp_id` int DEFAULT NULL,
  `question` varchar(250) DEFAULT NULL,
  `answer` varchar(250) DEFAULT NULL,
  `added_date` datetime DEFAULT CURRENT_TIMESTAMP,
  `updated_date` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`)
);

CREATE TABLE `vendor_registered_offices` (
  `id` int NOT NULL AUTO_INCREMENT,
  `vendor_temp_id` int NOT NULL,
  `address` varchar(250) DEFAULT NULL,
  `address_2` varchar(250) DEFAULT NULL,
  `pincode` varchar(6) DEFAULT NULL,
  `city` varchar(200) DEFAULT NULL,
  `country` varchar(200) DEFAULT NULL,
  `state` varchar(200) DEFAULT NULL,
  `telephone` varchar(15) DEFAULT NULL,
  `added_date` datetime DEFAULT CURRENT_TIMESTAMP,
  `updated_date` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`)
);

CREATE TABLE `vendor_reputed_customers` (
  `id` int NOT NULL AUTO_INCREMENT,
  `vendor_temp_id` int NOT NULL,
  `customer_name` varchar(45) DEFAULT NULL,
  `address` varchar(250) DEFAULT NULL,
  `pincode` varchar(250) DEFAULT NULL,
  `city` varchar(250) DEFAULT NULL,
  `country` varchar(250) DEFAULT NULL,
  `state` varchar(250) DEFAULT NULL,
  `telephone` varchar(250) DEFAULT NULL,
  `fax_no` varchar(250) DEFAULT NULL,
  `added_date` datetime DEFAULT CURRENT_TIMESTAMP,
  `updated_date` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`)
);

CREATE TABLE `vendor_small_scales` (
  `id` int NOT NULL AUTO_INCREMENT,
  `vendor_temp_id` int DEFAULT NULL,
  `year` int DEFAULT NULL,
  `registration_no` varchar(45) DEFAULT NULL,
  `certificate_file` varchar(45) DEFAULT NULL,
  `added_date` datetime DEFAULT CURRENT_TIMESTAMP,
  `updated_date` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`)
);

CREATE TABLE `vendor_turnovers` (
  `ID` int NOT NULL AUTO_INCREMENT,
  `vendor_temp_id` int DEFAULT NULL,
  `first_year` varchar(45) DEFAULT NULL,
  `first_year_turnonver` int DEFAULT NULL,
  `second_year` varchar(45) DEFAULT NULL,
  `second_year_turnonver` int DEFAULT NULL,
  `third_year` varchar(45) DEFAULT NULL,
  `third_year_turnonver` int DEFAULT NULL,
  `added_date` datetime DEFAULT CURRENT_TIMESTAMP,
  `updated_date` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`ID`)
);

ALTER TABLE `vendor_temps` ADD COLUMN `business_type` VARCHAR(45) NULL DEFAULT NULL;
ALTER TABLE `vendor_temps` ADD COLUMN `telephone` VARCHAR(15) NULL DEFAULT NULL;
ALTER TABLE `vendor_temps` ADD COLUMN `faxno` VARCHAR(15) NULL DEFAULT NULL;
ALTER TABLE `vendor_temps` ADD COLUMN `reconciliation_account_id` int NULL DEFAULT NULL;
ALTER TABLE `vendor_temps` ADD COLUMN `company_code_id` int NULL DEFAULT NULL;
ALTER TABLE `vendor_temps` ADD COLUMN `bank_name` VARCHAR(45) NULL DEFAULT NULL;
ALTER TABLE `vendor_temps` ADD COLUMN `bank_branch` VARCHAR(45) NULL DEFAULT NULL;
ALTER TABLE `vendor_temps` ADD COLUMN `bank_number` VARCHAR(45) NULL DEFAULT NULL;
ALTER TABLE `vendor_temps` ADD COLUMN `bank_ifsc` VARCHAR(45) NULL DEFAULT NULL;
ALTER TABLE `vendor_temps` ADD COLUMN `bank_key` VARCHAR(45) NULL DEFAULT NULL;
ALTER TABLE `vendor_temps` ADD COLUMN `bank_country` VARCHAR(45) NULL DEFAULT NULL;
ALTER TABLE `vendor_temps` ADD COLUMN `bank_city` VARCHAR(45) NULL DEFAULT NULL;
ALTER TABLE `vendor_temps` ADD COLUMN `bank_swift` VARCHAR(45) NULL DEFAULT NULL;
